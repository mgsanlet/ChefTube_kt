[versions]
activityKtxVersion = "1.8.2"
annotationVersion = "1.7.0"
appcompatVersion = "1.6.1"
constraintlayoutVersion = "2.1.4"
coreTesting = "2.2.0"
databindingRuntime = "8.2.2"
firebaseBom = "33.14.0"
flexbox = "3.0.0"
fragmentKtx = "1.6.2"
glide = "4.16.0"
gson = "2.10.1"
hiltAndroid = "2.56.1"
hiltAndroidCompilerVersion = "2.56.1"
hiltCompiler = "1.1.0"
hiltNavigationComposeVersion = "1.1.0"
hiltWorkVersion = "1.1.0"
junit = "4.13.2"
kotlinStdlib = "2.1.10"
kotlinxCoroutinesAndroid = "1.7.3"
kotlinxCoroutinesPlayServices = "1.9.0"
kotlinxCoroutinesTest = "1.7.3"
lifecycleLivedataKtxVersion = "2.7.0"
lifecycleViewmodelKtxVersion = "2.7.0"
lingver = "1.3.0"
loggingInterceptor = "4.12.0"
materialVersion = "1.11.0"
media3CommonKtx = "1.6.0"
mockk = "1.14.2"
mockkAgentJvm = "1.13.3"
mpandroidchart = "v3.1.0"
retrofit = "2.9.0"
truth = "1.1.5"
turbine = "1.0.0"
ucrop = "2.2.8"
volley = "1.2.1"
workRuntimeKtxVersion = "2.9.0"
zxingAndroidEmbedded = "4.3.0"

[libraries]
activity-ktx = { module = "androidx.activity:activity-ktx", version.ref = "activityKtxVersion" }
androidx-annotation = { module = "androidx.annotation:annotation", version.ref = "annotationVersion" }
androidx-appcompat = { module = "androidx.appcompat:appcompat", version.ref = "appcompatVersion" }
androidx-constraintlayout = { module = "androidx.constraintlayout:constraintlayout", version.ref = "constraintlayoutVersion" }
androidx-core-testing = { module = "androidx.arch.core:core-testing", version.ref = "coreTesting" }
androidx-databinding-runtime = { module = "androidx.databinding:databinding-runtime", version.ref = "databindingRuntime" }
androidx-fragment-ktx = { module = "androidx.fragment:fragment-ktx", version.ref = "fragmentKtx" }
androidx-hilt-navigation-compose = { module = "androidx.hilt:hilt-navigation-compose", version.ref = "hiltNavigationComposeVersion" }
androidx-hilt-work = { module = "androidx.hilt:hilt-work", version.ref = "hiltWorkVersion" }
androidx-lifecycle-livedata-ktx = { module = "androidx.lifecycle:lifecycle-livedata-ktx", version.ref = "lifecycleLivedataKtxVersion" }
androidx-media3-common-ktx = { module = "androidx.media3:media3-common-ktx", version.ref = "media3CommonKtx" }
androidx-work-runtime-ktx = { module = "androidx.work:work-runtime-ktx", version.ref = "workRuntimeKtxVersion" }
converter-gson = { module = "com.squareup.retrofit2:converter-gson", version.ref = "retrofit" }
firebase-auth-ktx = { module = "com.google.firebase:firebase-auth-ktx" }
firebase-bom = { module = "com.google.firebase:firebase-bom", version.ref = "firebaseBom" }
firebase-firestore-ktx = { module = "com.google.firebase:firebase-firestore-ktx" }
firebase-storage-ktx = { module = "com.google.firebase:firebase-storage-ktx" }
flexbox = { module = "com.google.android.flexbox:flexbox", version.ref = "flexbox" }
glide = { module = "com.github.bumptech.glide:glide", version.ref = "glide" }
gson = { module = "com.google.code.gson:gson", version.ref = "gson" }
hilt-android = { module = "com.google.dagger:hilt-android", version.ref = "hiltAndroid" }
hilt-android-compiler = { module = "com.google.dagger:hilt-android-compiler", version.ref = "hiltAndroidCompilerVersion" }
hilt-compiler = { module = "androidx.hilt:hilt-compiler", version.ref = "hiltCompiler" }
junit = { module = "junit:junit", version.ref = "junit" }
kotlin-stdlib = { module = "org.jetbrains.kotlin:kotlin-stdlib", version.ref = "kotlinStdlib" }
kotlinx-coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "kotlinxCoroutinesAndroid" }
kotlinx-coroutines-play-services = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-play-services", version.ref = "kotlinxCoroutinesPlayServices" }
kotlinx-coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "kotlinxCoroutinesTest" }
lifecycle-viewmodel-ktx = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "lifecycleViewmodelKtxVersion" }
lingver = { module = "com.github.YarikSOffice:lingver", version.ref = "lingver" }
logging-interceptor = { module = "com.squareup.okhttp3:logging-interceptor", version.ref = "loggingInterceptor" }
material = { module = "com.google.android.material:material", version.ref = "materialVersion" }
mockk = { module = "io.mockk:mockk", version.ref = "mockk" }
mockk-agent-jvm = { module = "io.mockk:mockk-agent-jvm", version.ref = "mockkAgentJvm" }
mpandroidchart = { module = "com.github.PhilJay:MPAndroidChart", version.ref = "mpandroidchart" }
retrofit = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit" }
truth = { module = "com.google.truth:truth", version.ref = "truth" }
turbine = { module = "app.cash.turbine:turbine", version.ref = "turbine" }
ucrop = { module = "com.github.yalantis:ucrop", version.ref = "ucrop" }
volley = { module = "com.android.volley:volley", version.ref = "volley" }
zxing-android-embedded = { module = "com.journeyapps:zxing-android-embedded", version.ref = "zxingAndroidEmbedded" }

[plugins]
